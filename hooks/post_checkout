#!/usr/bin/env bash

# Download latest qemu-user-static if required
DOCKERFILE_NAME=$(basename "$DOCKERFILE_PATH")
if [ "$DOCKERFILE_NAME" = "Dockerfile" ]; then
  echo "qemu-user-static: skipping QEMU downloading"
else
  # Extract build architecture from Dockerfile extension
  DOCKERFILE_TAGRGET_ARCH=$(echo "$DOCKERFILE_NAME" | awk -F '.' '{print $NF}')

  echo "qemu-user-static: using QEMU to build '$IMAGE_NAME' for '$DOCKERFILE_TAGRGET_ARCH' using '$DOCKERFILE_PATH'"

  # Map target architecture to QEMU architecture
  case "$DOCKERFILE_TAGRGET_ARCH" in
    "amd64")
      QEMU_TO_ARCH="x86_64" ;;
    "armhf")
      QEMU_TO_ARCH="arm" ;;
    *)
      QEMU_TO_ARCH="$DOCKERFILE_TAGRGET_ARCH" ;;
  esac

  GITHUB_REPO="multiarch/qemu-user-static"
  GITHUB_TAGS_URL="https://api.github.com/repos/$GITHUB_REPO/tags"
  GITHUB_LATEST_TAG=$(curl -LSsf "$GITHUB_TAGS_URL" | grep -Eom 1 '"name" *: *"[^"]+"' | awk -F '"' '{print $(NF-1)}')
  QEMU_DOWNLOAD_URL="https://github.com/$GITHUB_REPO/releases/download/$GITHUB_LATEST_TAG/x86_64_qemu-$QEMU_TO_ARCH-static.tar.gz"

  echo "Downloading qemu-user-static version '$GITHUB_LATEST_TAG' for '$QEMU_TO_ARCH' from '$QEMU_DOWNLOAD_URL'"
  curl -LSsf "$QEMU_DOWNLOAD_URL" | tar xzv
fi
