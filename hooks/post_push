#!/usr/bin/env bash

# Use manifest-tool to create the manifest, given the experimental
# "docker manifest" command isn't available yet on Docker Hub.

# Download latest manifest-tool
GITHUB_REPO="estesp/manifest-tool"
GITHUB_TAGS_URL="https://api.github.com/repos/$GITHUB_REPO/tags"
GITHUB_LATEST_TAG=$(curl -LSsf "$GITHUB_TAGS_URL" | grep -Eom 1 '"name" *: *"[^"]+"' | awk -F '"' '{print $(NF-1)}')
MANIFEST_TOOL_DOWNLOAD_URL="https://github.com/$GITHUB_REPO/releases/download/$GITHUB_LATEST_TAG/manifest-tool-linux-amd64"

echo "Downloading manifest-tool version '$GITHUB_LATEST_TAG' from '$MANIFEST_TOOL_DOWNLOAD_URL'"
curl -LSsfo manifest-tool "$MANIFEST_TOOL_DOWNLOAD_URL"
chmod +x manifest-tool


# Convert architecture name to platform section of manifest for manifest-tool
arch_to_manifest_platform()
{
  case "$1" in
    "amd64")
      echo "os: linux"
      echo "architecture: amd64"
    ;;
    "aarch64")
      echo "os: linux"
      echo "architecture: arm64"
      echo "variant: v8"
    ;;
    "armhf")
      echo "os: linux"
      echo "architecture: arm"
      echo "variant: v6"
    ;;
    *)
      echo "Failed to generate manifest platform, unknown architecture '$1'"
      exit 1
    ;;
  esac
}

# Collect architectures from dockerfiles located in the same dir as
# current Dockerfile and use their filenames to create manifest list for manifest-tools
generate_manifest_list()
{
  # Use tag prefix if it is present in current image tag
  if [[ "$DOCKER_TAG" == *"-"* ]]; then
    DOCKERHUB_TAG_PREFIX=$(echo "$DOCKER_TAG" | cut -d '-' -f 1)
    DOCKERHUB_DST_REPO="$DOCKER_REPO:$DOCKERHUB_TAG_PREFIX"
    DOCKERHUB_TAG_PREFIX="$DOCKERHUB_TAG_PREFIX-"
  else
    DOCKERHUB_DST_REPO="$DOCKER_REPO:latest"
    DOCKERHUB_TAG_PREFIX=""
  fi
  
  echo "image: $DOCKERHUB_DST_REPO"
  echo "manifests:"

  # Look for neighbouring dockerfiles, add 
  DOCKERFILE_DIR=$(dirname "$DOCKERFILE_PATH")
  for f in "$DOCKERFILE_DIR/Dockerfile"*; do
    DOCKERFILE_ARCH=$(basename "$f" | awk -F '.' '{print $NF}')
    if [ "$DOCKERFILE_ARCH" = "Dockerfile" ]; then
      DOCKERFILE_ARCH="amd64"
    fi
    DOCKERFILE_IMAGE_NAME="$DOCKER_REPO:$DOCKERHUB_TAG_PREFIX$DOCKERFILE_ARCH"

    echo "  - image: $DOCKERFILE_IMAGE_NAME"
    echo "    platform:"
    arch_to_manifest_platform "$DOCKERFILE_ARCH" | awk '{print "      " $0}'
  done
}

GENERATED_MANIFEST_LIST="$(generate_manifest_list)"
echo "Pushing generated manifest list using manifest-tool:"
echo "$GENERATED_MANIFEST_LIST"
./manifest-tool push from-spec --ignore-missing <(echo "$GENERATED_MANIFEST_LIST")
